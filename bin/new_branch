#!/usr/bin/env ruby
# Jira issue ids (or arbitrary strings) into branch names
# 
# Requires jira-cli for Jira, see https://github.com/ankitpokhrel/jira-cli/#installation for installation instructions
# 
# Example use:
#   new_branch some branch name
#     > Switched to a new branch 'some_branch_name'
#   new_branch "some really, really cool branch name! woohoo"
#     > Switched to a new branch 'some_really_really_cool_branch_name_woohoo'
#
# When using with Jira:
#   new_branch SCH-123
#     > Switched to a new branch 'SCH-123/the_summary_of_the_jira_issue'
def branch_name
  if jira?
    "#{jira_issue_key}/#{sanitize_branch_name(jira_summary)}"
  else
    sanitize_branch_name(ARGV)
  end
end

def sanitize_branch_name(input)
  word_array = input.respond_to?(:map) ? input : input.split('\s')
  word_array.
    map(&:strip).
    join('_').
    gsub(/\s/, '_').
    gsub(/[^\w_]/, '').
    downcase
end

def jira_issue_key
  if match = ARGV.first&.match(/[A-Z]{2,}-\d+/)
    match[0]
  end
end

def jira?
  !!jira_issue_key
end

def jira_summary
  issue_details = `jira issue view --plain #{jira_issue_key}`
  issue_details.split("\n")[3].match(/\s*#\s(?<summary>.*)/)['summary'].strip
rescue
  nil
end

def help
  puts "   new_branch some branch name"
  puts "     > Switched to a new branch 'some_branch_name'"
  puts "   new_branch \"some really, really cool branch name! woohoo\""
  puts "     > Switched to a new branch 'some_really_really_cool_branch_name_woohoo'"
  puts " When using with Jira:"
  puts "   new_branch SCH-123"
  puts "     > Switched to a new branch 'SCH-123/the_summary_of_the_jira_issue'"
  puts " Requires jira-cli for Jira, see https://github.com/ankitpokhrel/jira-cli/#installation for installation instructions"
  exit
end

if ARGV.empty?
  puts "must specify branch name or Jira ID, ex:"
  help
end

if ['-h', 'help'].include? ARGV.first
  help
end

exec("git co -b #{branch_name}")
