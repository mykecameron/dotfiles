set -s escape-time 0

# act like vim
# set -g prefix2 C-a
set-option -g status-keys vi
setw -g mode-keys vi

# use vim bindings to move through panes
bind -n M-h select-pane -L
bind -n M-j select-pane -D
bind -n M-k select-pane -U
bind -n M-l select-pane -R

bind -n M-n next-window
bind -n M-p previous-window

bind -n M-s choose-session  # list session and select one
bind -n M-u switch-client -n # nest session
bind -n M-d switch-client -p # previous session

# use vim-ish bindings for resizing panes
bind -nr M-Left resize-pane -L 5
bind -nr M-Down resize-pane -D 5
bind -nr M-Up resize-pane -U 5
bind -nr M-Right resize-pane -R 5

# use M-a as prefix (note the M is ⌥ but also ⎋)
unbind C-b
set -g prefix M-a
bind M-a send-prefix

# to pass C-a through to program running in tmux just do it twice
bind C-a send-prefix

# look good
set -g default-terminal "screen-256color"
#
# scrollback buffer size increase
set -g history-limit 50000

# Set the window and pane index to 1 instead of 0
set -g base-index 1
setw -g pane-base-index 1

# Set the pane divider colors
set -g pane-border-fg white
set -g pane-border-bg black
set -g pane-active-border-fg yellow
set -g pane-active-border-bg black

# reload this file
bind -n M-r source-file ~/.tmux.conf \; display "Reloaded!"

# split panes
bind -n M-\ split-window -h
bind -n M-- split-window -v

# copy and paste (command mode)
unbind [
bind -n M-` copy-mode
# bind p paste-buffer
bind -t vi-copy 'v' begin-selection
bind -t vi-copy 'y' copy-selection

# Display messages for 4s
set-option -g display-time 4000

# Smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys 'C-\\') || tmux select-pane -l"

# Use this wrapper function so pbcopy and pbpaste work in tmux
# NOTE: You need to install reattach-to-user-namespace pasteboard
#       https://github.com/ChrisJohnsen/tmux-MacOSX-pasteboard
# set-option -g default-command "reattach-to-user-namespace -l zsh"
# bind C-c run "tmux save-buffer - | reattach-to-user-namespace pbcopy"
# bind C-v run "tmux set-buffer - $(reattach-to-user-namespace pbpaste); tmux paste-buffer"

set-option -ga update-environment ' BOXEN_HOME'
# 
# # for powerline
# set-option -g status on
# set-option -g status-interval 2
# set-option -g status-utf8 on
# set-option -g status-justify "centre"
# set-option -g status-left-length 60
# set-option -g status-right-length 90
# set-option -g status-left "#(~/path/to/tmux-powerline/powerline.sh left)"
# set-option -g status-right "#(~/path/to/tmux-powerline/powerline.sh right)"
# set-window-option -g window-status-current-format "#[fg=colour235, bg=colour27]⮀#[fg=colour255, bg=colour27] #I ⮁ #W #[fg=colour27, bg=colour235]⮀"
# 
